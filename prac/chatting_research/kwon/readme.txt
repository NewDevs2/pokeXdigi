# 키워드

## WebSocket

- 실시간 양방향 통신을 가능하게 해주는 기술이다.
- HTML5에서 도입된 양방향 통신 프로토콜이다.
- 기존의 HTTP 요청과 달리, 클라이언트와 서버 간에 계속해서 연결된 상태를 유지하며, 실시간으로 데이터를 주고 받을수 있다.
- 채팅 어플리케이션과 같은 실시간성이 중요한 웹 어플리케이션에서 많이 사용 된다.

## AjAX, XMLHttpRequest

- 서버와 비동기적으로 통신하는 기술입니다.

## Server-Sent Events

- 서버에서 클라이언트로 데이터를 보내는 단방향 통신 방식이며,Long Polling은 클라이언트가 서버에 지속적으로 요청을 보내는 방식이다.

## Firebases

- Google에서 제공하는 실시간 데이터베이스 서비스 입니다.

## 웹소켓

- 초기 접속에서 HTTP 프로토콜을 사용하여 서버와 클라이언트 사이에 웹소켓 연결을 설정한 다음, 이후에은 TCP 소켓 연결을 유지 한다.
- 기존의 HTTP 요청과 달리 오버헤드가 적으며, 실시간 데이터를 정솔 할 수 있다.
- 웹소켓 api는 javaScript에서 제공되며, `WebSocket`클래스를 통해 사용할 수 있다.
- 웹소켓은 서버와 클라이언트 간에 지속적인 연결을 유지하며, 양방향으로 데이터를 주고받을 수 있습니다. 즉, 서버에서 클라이언트로도 데이터를 보낼 수 있고, 클라이언트에서 서버로도 데이터를 보낼 수 있습니다.
- 웹소켓을 이용하면 채팅, 실시간 게임, 주식 시세 정보 등의 실시간 정보를 처리할 수 있습니다. 또한, 웹소켓은 서버에서 클라이언트로 메시지를 보낼 때 이메일, SMS, 푸시 알림 등의 대안으로 활용될 수도 있습니다.

### 웹소켓이 생긴 이유

- HTP 프로토콜은 클라이언트가 요청을 보내면 서버가 응답을 보내는 단방향 통신 방식이기 깨문에, 클라이언트에서 실시간으로 정보를 전송하거나 서버에서 푸시 메시지를 보내는 등의 기능을 구현하기 어려웠다.

### 웹소켓 JSON

- 웹소켓은 클라이언트와 서버 간에 데이터를 정송할 때 일반적으로 JSON 형식을 사용한다.
- 클라이언트는 JSON 형식으로 메시지를 작성하여 서버로 전송하고, 서버는 수신한 JSON 메시지를 처리하여 다시 JSON 형식으로 응답을 보낸다.

## 핵심적인 요소

1. 사용자 인증 로직: 회원 가입, 로그인 등의 인증 기능을 구현하여 사용자가 로그인한 후 채팅 기능을 사용할 수 있도록 합니다.
2. 채팅 메시지 전송 로직: 사용자가 채팅 메시지를 입력하고 전송 버튼을 누르면, 입력된 메시지를 서버로 전송합니다.
3. 채팅 메시지 수신 로직: 서버에서 채팅 메시지가 전송되면, 해당 메시지를 수신하여 채팅방 화면에 출력합니다.
4. 채팅방 입장 및 퇴장 로직: 사용자가 채팅방에 입장하거나 퇴장할 때 해당 정보를 서버에 전송하여, 다른 사용자들이 채팅방에 누가 있는지 알 수 있도록 합니다.
5. UI 로직: 채팅방 화면을 보여주는 UI를 구성하고, 채팅 메시지를 출력하고 입력할 수 있는 폼 등의 UI 요소를 제공합니다.

## 프록시(Proxy)

- 인터넷을 통해 데이터를주고 받을 때 중계 서버를 이용하여 클라이언트와 서버 간의 통신을 대신하는 컴퓨터 시스템이나 애플리케이션을 의미한다.

주어 목적어 형식 마음에 든다 안 든다.

### connect

- 클라이언트와 서버 간에 TCP/IP 터널을 서정하기 위해 사용된다.
- 일반적으로 connect 메소드는 SSL(HTTPS)프록시 서버와의 통신을 위해 사용한다.
- 클라이언트는 HTTPS 연경을 SSL 프록시 서버를 통해 요청하고, SSL 프록시 서버는 해당 요청을 수락하여 클라이언트와 서버 간에 안전한 연결을 설정할 수 있다.

### HTTPS

- HTTPS 프록시

커넥트 메소드

반응을 확인해 본다

Put 

Delet

실시간으로 생각하는 방향성